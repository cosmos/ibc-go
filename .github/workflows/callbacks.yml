name: Callbacks Module
# This workflow runs when a PR is opened that targets code that is part of the callbacks module.
on:
  pull_request:
  push:
    branches:
      - main
permissions:
  contents: read
  pull-requests: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: golangci/golangci-lint-action@v6.0.1
        with:
          version: v1.57.2
          only-new-issues: true
          args: --timeout 5m
          working-directory: modules/apps/callbacks

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-arch: ['amd64', 'arm', 'arm64']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Build callbacks-module
        run: |
          cd modules/apps/callbacks
          GOARCH=${{ matrix.go-arch }} go build ./...

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Go Test
        run: |
          cd modules/apps/callbacks
          go test -v -mod=readonly ./... -coverprofile=coverage.out

  code-analysis:
    if: github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - name: sonarcloud
        if: ${{ env.GIT_DIFF && !github.event.pull_request.draft && env.SONAR_TOKEN != null }}
        uses: SonarSource/sonarcloud-github-action@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: modules/apps/callbacks/
