name: Tests / Code Coverage
#  Tests / Code Coverage workflow runs unit tests and uploads a code coverage report
#  This workflow is run on pushes to main & every Pull Requests where a .go, .mod, .sum have been changed
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/main'"

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-arch: ['amd64', 'arm64']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - uses: technote-space/get-diff-action@v6.1.2
        id: git_diff
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - name: Build ibc-go
        run: GOARCH=${{ matrix.go-arch }} LEDGER_ENABLED=false make build
      - name: Install compiler for arm64.
        if: matrix.go-arch == 'arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
          echo "CC=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
      - name: Build e2e
        run: |
          cd e2e
          find ./tests -type d | while IFS= read -r dir
          do
              if ls "${dir}"/*.go >/dev/null 2>&1; then
                  CGO_ENABLED=1 GOARCH=${{ matrix.go-arch }} go test -c "$dir"
              fi
          done

  split-test-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Create a file with all the pkgs
        run: go list ./... | grep -v e2e > pkgs.txt
      - name: Split pkgs into 4 files
        run: split -d -n l/4 pkgs.txt pkgs.txt.part.
      # cache multiple
      - uses: actions/upload-artifact@v4
        with:
          name: '${{ github.sha }}-00'
          path: ./pkgs.txt.part.00
      - uses: actions/upload-artifact@v4
        with:
          name: '${{ github.sha }}-01'
          path: ./pkgs.txt.part.01
      - uses: actions/upload-artifact@v4
        with:
          name: '${{ github.sha }}-02'
          path: ./pkgs.txt.part.02
      - uses: actions/upload-artifact@v4
        with:
          name: '${{ github.sha }}-03'
          path: ./pkgs.txt.part.03

  tests:
    runs-on: ubuntu-latest
    needs: split-test-files
    strategy:
      fail-fast: false
      matrix:
        part: ['00', '01', '02', '03']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - uses: technote-space/get-diff-action@v6.1.2
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - uses: actions/download-artifact@v4
        with:
          name: '${{ github.sha }}-${{ matrix.part }}'
        if: env.GIT_DIFF
      - name: test & coverage report creation
        run: |
          cat pkgs.txt.part.${{ matrix.part }} | xargs go test -mod=readonly -timeout 30m -coverprofile=${{ matrix.part }}profile.out -covermode=atomic -tags='ledger test_ledger_mock'
        if: env.GIT_DIFF
      - uses: actions/upload-artifact@v4
        if: env.GIT_DIFF
        with:
          name: '${{ github.sha }}-${{ matrix.part }}-coverage'
          path: ./${{ matrix.part }}profile.out

  code-analysis:
    if: github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - uses: actions/checkout@v4
      - uses: technote-space/get-diff-action@v6.1.2
        id: git_diff
        with:
          PATTERNS: |
            **/*.go
            go.mod
            go.sum
            **/go.mod
            **/go.sum
      - uses: actions/download-artifact@v4
        if: env.GIT_DIFF
        with:
          name: '${{ github.sha }}-00-coverage'
      - uses: actions/download-artifact@v4
        if: env.GIT_DIFF
        with:
          name: '${{ github.sha }}-01-coverage'
      - uses: actions/download-artifact@v4
        if: env.GIT_DIFF
        with:
          name: '${{ github.sha }}-02-coverage'
      - uses: actions/download-artifact@v4
        if: env.GIT_DIFF
        with:
          name: '${{ github.sha }}-03-coverage'
      - name: sonarcloud
        if: ${{ env.GIT_DIFF && !github.event.pull_request.draft }}
        uses: SonarSource/sonarcloud-github-action@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
