syntax = "proto3";

package ibc.applications.gmp.v1;

option go_package = "github.com/cosmos/ibc-go/v10/modules/apps/27-gmp/types";

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";

// Msg defines the ibc/gmp Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // SendCall defines a rpc handler method for MsgSendCall.
  rpc SendCall(MsgSendCall) returns (MsgSendCallResponse);
}

// MsgSendCall defines a msg to send a call to a contract/receiver on a ICS27-2 enabled chain.
message MsgSendCall {
  option (cosmos.msg.v1.signer) = "sender";

  option (gogoproto.goproto_getters) = false;

  // the client by which the packet will be sent
  string source_client = 1;
  // the sender address
  string sender = 2;
  // the recipient address on the destination chain
  string receiver = 3;
  // The salt used to generate the caller account address
  bytes salt = 4;
  // The payload of the call
  bytes payload = 5;
  // Timeout timestamp in absolute nanoseconds since unix epoch.
  uint64 timeout_timestamp = 6;
  // optional memo
  string memo = 7;
  // optional encoding
  string encoding = 8;
}

// MsgSendCallResponse defines the Msg/SendCall response type.
message MsgSendCallResponse {
  option (gogoproto.goproto_getters) = false;

  // sequence number of the GMP packet sent
  uint64 sequence = 1;
}
