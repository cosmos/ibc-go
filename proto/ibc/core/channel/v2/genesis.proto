syntax = "proto3";

package ibc.core.channel.v2;

option go_package = "github.com/cosmos/ibc-go/v9/modules/core/04-channel/v2/types";

import "gogoproto/gogo.proto";
import "ibc/core/channel/v2/channel.proto";

// GenesisState defines the ibc channel submodule's genesis state.
message GenesisState {
  repeated IdentifiedChannel channels = 1 [(gogoproto.casttype) = "IdentifiedChannel", (gogoproto.nullable) = false];
  repeated PacketState       acknowledgements = 2 [(gogoproto.nullable) = false];
  repeated PacketState       commitments      = 3 [(gogoproto.nullable) = false];
  repeated PacketState       receipts         = 4 [(gogoproto.nullable) = false];
  repeated PacketSequence    send_sequences   = 5 [(gogoproto.nullable) = false];
}

// PacketState defines the generic type necessary to retrieve and store
// packet commitments, acknowledgements, and receipts.
// Caller is responsible for knowing the context necessary to interpret this
// state as a commitment, acknowledgement, or a receipt.
message PacketState {
  option (gogoproto.goproto_getters) = false;

  // channel unique identifier.
  string channel_id = 1;
  // packet sequence.
  uint64 sequence = 2;
  // embedded data that represents packet state.
  bytes data = 3;
}

// PacketSequence defines the genesis type necessary to retrieve and store next send sequences.
message PacketSequence {
  // channel unique identifier.
  string channel_id = 1;
  // packet sequence
  uint64 sequence = 2;
}
