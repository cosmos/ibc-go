
syntax = "proto3";

package ibc.core.channel.v2;

option go_package = "github.com/cosmos/ibc-go/v9/modules/core/04-channel/v2/types";

import "gogoproto/gogo.proto";

// Packet defines a type that carries data across different chains through IBC
message Packet {
  // number corresponds to the order of sends and receives, where a Packet
  // with an earlier sequence number must be sent and received before a Packet
  // with a later sequence number.
  uint64 sequence = 1;
  // identifies the sending chain.
  string source_id = 2;
  // identifies the receiving chain.
  string destination_id = 3;
  // timeout timestamp after which the packet times out.
  uint64 timeout_timestamp = 4;
  // a list of packet data, each one for a specific application.
  repeated PacketData data = 5 [(gogoproto.nullable) = false];
}

// PacketData contains the source and destination ports and payload for the application
message PacketData {
  // specifies the source port of the packet.
  string source_port = 1;
  // specifies the destination port of the packet.
  string destination_port = 2;
  // the payload to be sent to the application.
  Payload payload = 3 [(gogoproto.nullable) = false];
}

// Payload holds the version, encoding and raw bytes to be passed to an application
message Payload {
  // version of the specified application.
  string version = 1;
  // the encoding used for the provided value.
  string encoding = 2;
  // the raw bytes for the payload.
  bytes value = 3;
}
