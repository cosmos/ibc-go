"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[79958],{28453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>a});var i=n(96540);const s={},d=i.createContext(s);function o(e){const r=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(d.Provider,{value:r},e.children)}},51136:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>a,toc:()=>t});var i=n(74848),s=n(28453);const d={title:"Example Flows",sidebar_label:"Example Flows",sidebar_position:3,slug:"/apps/packet-forward-middleware/example-flows"},o="Packet Forward Middleware Flows",a={id:"middleware/packet-forward-middleware/example-usage",title:"Example Flows",description:"This document outlines some example flows leveraging packet forward middleware and formats of the memo field.",source:"@site/docs/04-middleware/02-packet-forward-middleware/03-example-usage.md",sourceDirName:"04-middleware/02-packet-forward-middleware",slug:"/apps/packet-forward-middleware/example-flows",permalink:"/main/apps/packet-forward-middleware/example-flows",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Example Flows",sidebar_label:"Example Flows",sidebar_position:3,slug:"/apps/packet-forward-middleware/example-flows"},sidebar:"defaultSidebar",previous:{title:"Integration",permalink:"/main/apps/packet-forward-middleware/integration"},next:{title:"Overview",permalink:"/main/apps/rate-limit-middleware/overview"}},c={},t=[{value:"Example Scenarios",id:"example-scenarios",level:2},{value:"Successful Transfer forwarding through chain B",id:"successful-transfer-forwarding-through-chain-b",level:3},{value:"Memo for simple forward",id:"memo-for-simple-forward",level:3},{value:"Error on Forwarding Hop, Refund to A",id:"error-on-forwarding-hop-refund-to-a",level:3},{value:"Forwarding with Retry and Timeout Logic",id:"forwarding-with-retry-and-timeout-logic",level:3},{value:"A -&gt; B -&gt; C full success",id:"a---b---c-full-success",level:3},{value:"A -&gt; B -&gt; C with C error ACK",id:"a---b---c-with-c-error-ack",level:3},{value:"A packet timeouts on B before C timeouts packet from B",id:"a-packet-timeouts-on-b-before-c-timeouts-packet-from-b",level:3},{value:"Memo for Retry and Timeout Logic, with Nested Memo (2 forwards)",id:"memo-for-retry-and-timeout-logic-with-nested-memo-2-forwards",level:3},{value:"Intermediate Address Security",id:"intermediate-address-security",level:2}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"packet-forward-middleware-flows",children:"Packet Forward Middleware Flows"}),"\n",(0,i.jsx)(r.p,{children:"This document outlines some example flows leveraging packet forward middleware and formats of the memo field."}),"\n",(0,i.jsx)(r.h2,{id:"example-scenarios",children:"Example Scenarios"}),"\n",(0,i.jsx)(r.h3,{id:"successful-transfer-forwarding-through-chain-b",children:"Successful Transfer forwarding through chain B"}),"\n",(0,i.jsx)(r.mermaid,{value:"sequenceDiagram\n    autonumber\n    Chain A ->> Chain B: Send PFM transfer\n    Chain B ->> Chain C: Forward\n    Chain C ->> Chain B: ACK\n    Chain B ->> Chain A: ACK"}),"\n",(0,i.jsx)(r.h3,{id:"memo-for-simple-forward",children:"Memo for simple forward"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"The packet-forward-middleware integrated on Chain B."}),"\n",(0,i.jsxs)(r.li,{children:["The packet data ",(0,i.jsx)(r.code,{children:"receiver"})," for the ",(0,i.jsx)(r.code,{children:"MsgTransfer"})," on Chain A is set to ",(0,i.jsx)(r.code,{children:'"pfm"'})," or some other invalid bech32 string.*"]}),"\n",(0,i.jsxs)(r.li,{children:["The packet ",(0,i.jsx)(r.code,{children:"memo"})," is included in ",(0,i.jsx)(r.code,{children:"MsgTransfer"})," by user on Chain A."]}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'{\n  "forward": {\n    "receiver": "chain-c-bech32-address",\n    "port": "transfer",\n    "channel": "channel-123"\n  }\n}\n'})}),"\n",(0,i.jsx)(r.h3,{id:"error-on-forwarding-hop-refund-to-a",children:"Error on Forwarding Hop, Refund to A"}),"\n",(0,i.jsx)(r.mermaid,{value:"sequenceDiagram\n    autonumber\n    Chain A ->> Chain B: PFM transfer\n    Chain B ->> Chain C: Forward\n    Chain B ->> Chain C: Forward (errors)\n    Chain C ->> Chain B: \u2620\ufe0f ACK error\n    Chain B ->> Chain A: \u2620\ufe0f ACK error"}),"\n",(0,i.jsx)(r.h3,{id:"forwarding-with-retry-and-timeout-logic",children:"Forwarding with Retry and Timeout Logic"}),"\n",(0,i.jsx)(r.mermaid,{value:"sequenceDiagram\n    autonumber\n    Chain A ->> Chain B: PFM transfer\n    Chain B ->> Chain C: Forward\n    Chain C --x Chain B: Timeout\n    Chain B ->> Chain C: Retry forward\n    Chain C --x Chain B: Timeout\n    Chain B ->> Chain A: \u2620\ufe0f ACK error"}),"\n",(0,i.jsx)(r.h3,{id:"a---b---c-full-success",children:"A -> B -> C full success"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"A"})," This sends packet over underlying ICS-004 wrapper with memo as is."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"B"})," This receives packet and parses it into ICS-020 packet."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"B"})," Validates ",(0,i.jsx)(r.code,{children:"forward"})," packet on this step, return ",(0,i.jsx)(r.code,{children:"ACK"})," error if fails."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"B"})," If other middleware not yet called ICS-020, call it and ACK error on fail. Tokens minted or unescrowed here."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"B"})," Handle denom. If denom prefix is from ",(0,i.jsx)(r.code,{children:"B"}),", remove it. If denom prefix is other chain - add ",(0,i.jsx)(r.code,{children:"B"})," prefix."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"B"})," Take fee, create new ICS-004 packet with timeout from forward for next step, and remaining inner ",(0,i.jsx)(r.code,{children:"memo"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"B"})," Send transfer to ",(0,i.jsx)(r.code,{children:"C"})," with parameters obtained from ",(0,i.jsx)(r.code,{children:"memo"}),". Tokens burnt or escrowed here."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"B"})," Store tracking ",(0,i.jsx)(r.code,{children:"in flight packet"})," under next ",(0,i.jsx)(r.code,{children:"(channel, port, ICS-20 transfer sequence)"}),", do not ",(0,i.jsx)(r.code,{children:"ACK"})," packet yet."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"C"})," Handle ICS-020 packet as usual."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"B"})," On ICS-020 ACK from ",(0,i.jsx)(r.code,{children:"C"})," find ",(0,i.jsx)(r.code,{children:"in flight packet"}),", delete it and write ",(0,i.jsx)(r.code,{children:"ACK"})," for original packet from ",(0,i.jsx)(r.code,{children:"A"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"A"})," Handle ICS-020 ",(0,i.jsx)(r.code,{children:"ACK"})," as usual"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"https://mintscan.io/osmosis-testnet/txs/FAB912347B8729FFCA92AC35E6B1E83BC8169DE7CC2C254A5A3F70C8EC35D771?height=3788973",children:"Example"})," of USDC transfer from Osmosis -> Noble -> Sei"]}),"\n",(0,i.jsx)(r.h3,{id:"a---b---c-with-c-error-ack",children:"A -> B -> C with C error ACK"}),"\n",(0,i.jsxs)(r.ol,{start:"10",children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"B"})," On ICS-020 ACK from ",(0,i.jsx)(r.code,{children:"C"})," find ",(0,i.jsx)(r.code,{children:"in flight packet"}),", delete it"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"B"})," Burns or escrows tokens."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"B"})," And write error ",(0,i.jsx)(r.code,{children:"ACK"})," for original packet from ",(0,i.jsx)(r.code,{children:"A"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"A"})," Handle ICS-020 timeout as usual"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"C"})," writes success ",(0,i.jsx)(r.code,{children:"ACK"})," for packet from ",(0,i.jsx)(r.code,{children:"B"})]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["Same behavior in case of timeout on ",(0,i.jsx)(r.code,{children:"C"})]}),"\n",(0,i.jsx)(r.h3,{id:"a-packet-timeouts-on-b-before-c-timeouts-packet-from-b",children:"A packet timeouts on B before C timeouts packet from B"}),"\n",(0,i.jsxs)(r.ol,{start:"10",children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"A"})," Cannot timeout because ",(0,i.jsx)(r.code,{children:"in flight packet"})," has proof on ",(0,i.jsx)(r.code,{children:"B"})," of packet inclusion."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"B"})," waits for ACK or timeout from ",(0,i.jsx)(r.code,{children:"C"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"B"})," timeout from ",(0,i.jsx)(r.code,{children:"C"})," becomes fail ",(0,i.jsx)(r.code,{children:"ACK"})," on ",(0,i.jsx)(r.code,{children:"B"})," for ",(0,i.jsx)(r.code,{children:"A"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"A"})," receives success or fail ",(0,i.jsx)(r.code,{children:"ACK"}),", but not timeout"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["In this case ",(0,i.jsx)(r.code,{children:"A"})," assets ",(0,i.jsx)(r.code,{children:"hang"})," until final hop timeouts or ACK."]}),"\n",(0,i.jsx)(r.h3,{id:"memo-for-retry-and-timeout-logic-with-nested-memo-2-forwards",children:"Memo for Retry and Timeout Logic, with Nested Memo (2 forwards)"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"The packet-forward-middleware integrated on Chain B and Chain C."}),"\n",(0,i.jsxs)(r.li,{children:["The packet data ",(0,i.jsx)(r.code,{children:"receiver"})," for the ",(0,i.jsx)(r.code,{children:"MsgTransfer"})," on Chain A is set to ",(0,i.jsx)(r.code,{children:'"pfm"'})," or some other invalid bech32 string."]}),"\n",(0,i.jsxs)(r.li,{children:["The forward metadata ",(0,i.jsx)(r.code,{children:"receiver"})," for the hop from Chain B to Chain C is set to ",(0,i.jsx)(r.code,{children:'"pfm"'})," or some other invalid bech32 string."]}),"\n",(0,i.jsxs)(r.li,{children:["The packet ",(0,i.jsx)(r.code,{children:"memo"})," is included in ",(0,i.jsx)(r.code,{children:"MsgTransfer"})," by user on Chain A."]}),"\n",(0,i.jsx)(r.li,{children:"A packet timeout of 10 minutes and 2 retries is set for both forwards."}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"In the case of a timeout after 10 minutes for either forward, the packet would be retried up to 2 times, afterwards an error ack would be written to issue a refund on the prior chain."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"next"})," is the ",(0,i.jsx)(r.code,{children:"memo"})," to pass for the next transfer hop. Per ",(0,i.jsx)(r.code,{children:"memo"})," intended usage of a JSON string, it should be either JSON which will be Marshaled retaining key order, or an escaped JSON string which will be passed directly."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"next"})," as JSON"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'{\n  "forward": {\n    "receiver": "pfm", // intentionally invalid\n    "port": "transfer",\n    "channel": "channel-123",\n    "timeout": "10m",\n    "retries": 2,\n    "next": {\n      "forward": {\n        "receiver": "chain-d-bech32-address",\n        "port": "transfer",\n        "channel": "channel-234",\n        "timeout": "10m",\n        "retries": 2\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(r.h2,{id:"intermediate-address-security",children:"Intermediate Address Security"}),"\n",(0,i.jsx)(r.p,{children:"Intermediate chains don\u2019t need a valid receiver address. Instead, they derive a secure address from the packet\u2019s sender and channel, preventing users from forwarding tokens to arbitrary accounts."}),"\n",(0,i.jsx)(r.p,{children:'To avoid accidental transfers to chains without PFM, use an invalid bech32 address (e.g., "pfm") for intermediate receivers.'})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);