"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[86670],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(96540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},28858:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=s(74848),t=s(28453);const r={title:"Messages",sidebar_label:"Messages",sidebar_position:4,slug:"/apps/transfer/ics20-v1/messages"},o="Messages",a={id:"apps/transfer/messages",title:"Messages",description:"MsgTransfer",source:"@site/docs/02-apps/01-transfer/04-messages.md",sourceDirName:"02-apps/01-transfer",slug:"/apps/transfer/ics20-v1/messages",permalink:"/main/apps/transfer/ics20-v1/messages",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Messages",sidebar_label:"Messages",sidebar_position:4,slug:"/apps/transfer/ics20-v1/messages"},sidebar:"defaultSidebar",previous:{title:"State Transitions",permalink:"/main/apps/transfer/ics20-v1/state-transitions"},next:{title:"Events",permalink:"/main/apps/transfer/ics20-v1/events"}},c={},d=[{value:"<code>MsgTransfer</code>",id:"msgtransfer",level:2},{value:"Memo",id:"memo",level:3},{value:"Encoding",id:"encoding",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"messages",children:"Messages"}),"\n",(0,i.jsx)(n.h2,{id:"msgtransfer",children:(0,i.jsx)(n.code,{children:"MsgTransfer"})}),"\n",(0,i.jsxs)(n.p,{children:["A fungible token cross chain transfer is achieved by using the ",(0,i.jsx)(n.code,{children:"MsgTransfer"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:"type MsgTransfer struct {\n  SourcePort        string\n  // with IBC v2 SourceChannel will be a client ID\n  SourceChannel     string \n  Token             sdk.Coin\n  Sender            string\n  Receiver          string\n  // If you are sending with IBC v1 protocol, either timeout_height or timeout_timestamp must be set.\n  // If you are sending with IBC v2 protocol, timeout_timestamp must be set, and timeout_height must be omitted. \n  TimeoutHeight     ibcexported.Height\n  // Timeout timestamp in absolute nanoseconds since unix epoch.\n  TimeoutTimestamp  uint64\n  // optional Memo field\n  Memo              string\n  // optional Encoding field \n  Encoding          string \n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"This message is expected to fail if:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SourcePort"})," is invalid (see ",(0,i.jsx)(n.a,{href:"https://github.com/cosmos/ibc/blob/master/spec/core/ics-024-host-requirements/README.md#paths-identifiers-separators",children:"24-host naming requirements"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SourceChannel"})," is invalid (see ",(0,i.jsx)(n.a,{href:"https://github.com/cosmos/ibc/blob/master/spec/core/ics-024-host-requirements/README.md#paths-identifiers-separators",children:"24-host naming requirements"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Token"})," is invalid:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Amount"})," is not positive."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Denom"})," is not a valid IBC denomination as per ",(0,i.jsx)(n.a,{href:"/architecture/adr-001-coin-source-tracing",children:"ADR 001 - Coin Source Tracing"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Sender"})," is empty."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Receiver"})," is empty or contains more than 2048 bytes."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Memo"})," contains more than 32768 bytes."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"TimeoutHeight"})," and ",(0,i.jsx)(n.code,{children:"TimeoutTimestamp"})," are both zero for IBC Classic.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Note that ",(0,i.jsx)(n.code,{children:"TimeoutHeight"})," as a concept is removed in IBC v2, hence this must always be emitted and only ",(0,i.jsx)(n.code,{children:"TimeoutTimestamp"})," used."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["This message will send a fungible token to the counterparty chain represented by the counterparty Channel End connected to the Channel End with the identifiers ",(0,i.jsx)(n.code,{children:"SourcePort"})," and ",(0,i.jsx)(n.code,{children:"SourceChannel"}),". Note that in IBC v2 a pair of clients are connected and the ",(0,i.jsx)(n.code,{children:"SourceChannel"})," is referring to the source ",(0,i.jsx)(n.code,{children:"ClientID"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The denomination provided for transfer should correspond to the same denomination represented on this chain. The prefixes will be added as necessary upon by the receiving chain."}),"\n",(0,i.jsxs)(n.p,{children:["If the ",(0,i.jsx)(n.code,{children:"Amount"})," is set to the maximum value for a 256-bit unsigned integer (i.e. 2^256 - 1), then the whole balance of the corresponding denomination will be transferred. The helper function ",(0,i.jsx)(n.code,{children:"UnboundedSpendLimit"})," in the ",(0,i.jsx)(n.code,{children:"types"})," package of the ",(0,i.jsx)(n.code,{children:"transfer"})," module provides the sentinel value that can be used."]}),"\n",(0,i.jsx)(n.h3,{id:"memo",children:"Memo"}),"\n",(0,i.jsx)(n.p,{children:"The memo field was added to allow applications and users to attach metadata to transfer packets. The field is optional and may be left empty. When it is used to attach metadata for a particular middleware, the memo field should be represented as a json object where different middlewares use different json keys."}),"\n",(0,i.jsx)(n.p,{children:"For example, the following memo field is used by the callbacks middleware to attach a source callback to a transfer packet:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsonc",children:'{\n  "src_callback": {\n    "address": "callbackAddressString",\n    // optional\n    "gas_limit": "userDefinedGasLimitString",\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["You can find more information about other applications that use the memo field in the ",(0,i.jsx)(n.a,{href:"https://github.com/cosmos/chain-registry/blob/master/_memo_keys/ICS20_memo_keys.json",children:"chain registry"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"encoding",children:"Encoding"}),"\n",(0,i.jsxs)(n.p,{children:["In IBC v2, the encoding method used by an application has more flexibility as it is specified within a ",(0,i.jsx)(n.code,{children:"Payload"}),", rather than negotiated and fixed during an IBC classic channel handshake. Certain encoding types may be more suited to specific blockchains, e.g. ABI encoding is more gas efficient to decode in an EVM than JSON or Protobuf."]}),"\n",(0,i.jsxs)(n.p,{children:["Within ibc-go, JSON, protobuf and ABI encoding are supported and can be used, see the ",(0,i.jsx)(n.a,{href:"https://github.com/cosmos/ibc-go/blob/14bc17e26ad12cee6bdb99157a05296fcf58b762/modules/apps/transfer/types/packet.go#L36-L40",children:"transfer packet types"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);