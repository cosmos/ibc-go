"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[16487],{28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>a});var i=n(96540);const t={},r=i.createContext(t);function o(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:s},e.children)}},35529:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>m,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var i=n(74848),t=n(28453);const r={title:"Migrations",sidebar_label:"Migrations",sidebar_position:9,slug:"/ibc/light-clients/wasm/migrations"},o="Migrations",a={id:"light-clients/wasm/migrations",title:"Migrations",description:"This guide provides instructions for migrating 08-wasm versions.",source:"@site/versioned_docs/version-v8.5.x/03-light-clients/04-wasm/09-migrations.md",sourceDirName:"03-light-clients/04-wasm",slug:"/ibc/light-clients/wasm/migrations",permalink:"/v8/ibc/light-clients/wasm/migrations",draft:!1,unlisted:!1,tags:[],version:"v8.5.x",sidebarPosition:9,frontMatter:{title:"Migrations",sidebar_label:"Migrations",sidebar_position:9,slug:"/ibc/light-clients/wasm/migrations"},sidebar:"defaultSidebar",previous:{title:"Client",permalink:"/v8/ibc/light-clients/wasm/client"},next:{title:"Overview",permalink:"/v8/middleware/ics29-fee/overview"}},m={},c=[{value:"From ibc-go v7.3.x to ibc-go v8.0.x",id:"from-ibc-go-v73x-to-ibc-go-v80x",level:2},{value:"Chains",id:"chains",level:2},{value:"From v0.1.0+ibc-go-v8.0-wasmvm-v1.5 to v0.2.0-ibc-go-v8.3-wasmvm-v2.0",id:"from-v010ibc-go-v80-wasmvm-v15-to-v020-ibc-go-v83-wasmvm-v20",level:2},{value:"Chains",id:"chains-1",level:3}];function v(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"migrations",children:"Migrations"}),"\n",(0,i.jsx)(s.p,{children:"This guide provides instructions for migrating 08-wasm versions."}),"\n",(0,i.jsx)(s.h2,{id:"from-ibc-go-v73x-to-ibc-go-v80x",children:"From ibc-go v7.3.x to ibc-go v8.0.x"}),"\n",(0,i.jsx)(s.h2,{id:"chains",children:"Chains"}),"\n",(0,i.jsxs)(s.p,{children:["In the 08-wasm versions compatible with ibc-go v7.3.x and above from the v7 release line, the checksums of the uploaded Wasm bytecodes are all stored under a single key. From ibc-go v8.0.x the checksums are stored using ",(0,i.jsx)(s.a,{href:"https://docs.cosmos.network/v0.50/build/packages/collections#keyset",children:(0,i.jsx)(s.code,{children:"collections.KeySet"})}),", whose full functionality became available in Cosmos SDK v0.50. There is therefore an ",(0,i.jsx)(s.a,{href:"https://github.com/cosmos/ibc-go/blob/57fcdb9a9a9db9b206f7df2f955866dc4e10fef4/modules/light-clients/08-wasm/module.go#L115-L118",children:"automatic migration handler"})," configured in the 08-wasm module to migrate the stored checksums to ",(0,i.jsx)(s.code,{children:"collections.KeySet"}),"."]}),"\n",(0,i.jsx)(s.h2,{id:"from-v010ibc-go-v80-wasmvm-v15-to-v020-ibc-go-v83-wasmvm-v20",children:"From v0.1.0+ibc-go-v8.0-wasmvm-v1.5 to v0.2.0-ibc-go-v8.3-wasmvm-v2.0"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"WasmEngine"})," interface has been updated to reflect changes in the function signatures of Wasm VM:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-diff",children:"type WasmEngine interface {\n- StoreCode(code wasmvm.WasmCode) (wasmvm.Checksum, error)\n+ StoreCode(code wasmvm.WasmCode, gasLimit uint64) (wasmvmtypes.Checksum, uint64, error)\n\n  StoreCodeUnchecked(code wasmvm.WasmCode) (wasmvm.Checksum, error)\n\n  Instantiate(\n    checksum wasmvm.Checksum,\n    env wasmvmtypes.Env,\n    info wasmvmtypes.MessageInfo,\n    initMsg []byte,\n    store wasmvm.KVStore,\n    goapi wasmvm.GoAPI,\n    querier wasmvm.Querier,\n    gasMeter wasmvm.GasMeter,\n    gasLimit uint64,\n    deserCost wasmvmtypes.UFraction,\n- ) (*wasmvmtypes.Response, uint64, error)\n+ ) (*wasmvmtypes.ContractResult, uint64, error)\n\n  Query(\n    checksum wasmvm.Checksum,\n    env wasmvmtypes.Env,\n    queryMsg []byte,\n    store wasmvm.KVStore,\n    goapi wasmvm.GoAPI,\n    querier wasmvm.Querier,\n    gasMeter wasmvm.GasMeter,\n    gasLimit uint64,\n    deserCost wasmvmtypes.UFraction,\n- ) ([]byte, uint64, error)\n+ ) (*wasmvmtypes.QueryResult, uint64, error)\n\n  Migrate(\n    checksum wasmvm.Checksum,\n    env wasmvmtypes.Env,\n    migrateMsg []byte,\n    store wasmvm.KVStore,\n    goapi wasmvm.GoAPI,\n    querier wasmvm.Querier,\n    gasMeter wasmvm.GasMeter,\n    gasLimit uint64,\n    deserCost wasmvmtypes.UFraction,\n- ) (*wasmvmtypes.Response, uint64, error)\n+ ) (*wasmvmtypes.ContractResult, uint64, error)\n\n  Sudo(\n    checksum wasmvm.Checksum,\n    env wasmvmtypes.Env,\n    sudoMsg []byte,\n    store wasmvm.KVStore,\n    goapi wasmvm.GoAPI,\n    querier wasmvm.Querier,\n    gasMeter wasmvm.GasMeter,\n    gasLimit uint64,\n    deserCost wasmvmtypes.UFraction,\n- ) (*wasmvmtypes.Response, uint64, error)\n+ ) (*wasmvmtypes.ContractResult, uint64, error)\n\n  GetCode(checksum wasmvm.Checksum) (wasmvm.WasmCode, error)\n\n  Pin(checksum wasmvm.Checksum) error\n\n  Unpin(checksum wasmvm.Checksum) error\n}\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Similar changes were required in the functions of the ",(0,i.jsx)(s.code,{children:"MockWasmEngine"})," interface."]}),"\n",(0,i.jsx)(s.h3,{id:"chains-1",children:"Chains"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"SupportedCapabilities"})," field of ",(0,i.jsx)(s.code,{children:"WasmConfig"})," is now of type ",(0,i.jsx)(s.code,{children:"[]string"}),":"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-diff",children:"type WasmConfig struct {\n  DataDir string\n- SupportedCapabilities string\n+ SupportedCapabilities []string\n  ContractDebugMode bool\n}\n"})})]})}function l(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(v,{...e})}):v(e)}}}]);