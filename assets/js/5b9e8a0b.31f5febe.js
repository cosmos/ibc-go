"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[30067],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var i=t(96540);const a={},c=i.createContext(a);function s(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(c.Provider,{value:n},e.children)}},54382:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>h});var i=t(74848),a=t(28453);const c={title:"Active Channels",sidebar_label:"Active Channels",sidebar_position:3,slug:"/apps/interchain-accounts/active-channels"},s="Understanding Active Channels",o={id:"apps/interchain-accounts/active-channels",title:"Active Channels",description:"The Interchain Accounts module uses ORDERED channels to maintain the order of transactions when sending packets from a controller to a host chain. A limitation when using ORDERED channels is that when a packet times out the channel will be closed.",source:"@site/versioned_docs/version-v4.6.x/02-apps/02-interchain-accounts/03-active-channels.md",sourceDirName:"02-apps/02-interchain-accounts",slug:"/apps/interchain-accounts/active-channels",permalink:"/v4/apps/interchain-accounts/active-channels",draft:!1,unlisted:!1,tags:[],version:"v4.6.x",sidebarPosition:3,frontMatter:{title:"Active Channels",sidebar_label:"Active Channels",sidebar_position:3,slug:"/apps/interchain-accounts/active-channels"},sidebar:"defaultSidebar",previous:{title:"Authentication Modules",permalink:"/v4/apps/interchain-accounts/auth-modules"},next:{title:"Integration",permalink:"/v4/apps/interchain-accounts/integration"}},r={},h=[];function l(e){const n={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"understanding-active-channels",children:"Understanding Active Channels"}),"\n",(0,i.jsxs)(n.p,{children:["The Interchain Accounts module uses ",(0,i.jsx)(n.a,{href:"https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#ordering",children:"ORDERED channels"})," to maintain the order of transactions when sending packets from a controller to a host chain. A limitation when using ORDERED channels is that when a packet times out the channel will be closed."]}),"\n",(0,i.jsxs)(n.p,{children:["In the case of a channel closing, a controller chain needs to be able to regain access to the interchain account registered on this channel. ",(0,i.jsx)(n.code,{children:"Active Channels"})," enable this functionality. Future versions of the ICS-27 protocol and the Interchain Accounts module will likely use a new\nchannel type that provides ordering of packets without the channel closing on timing out, thus removing the need for ",(0,i.jsx)(n.code,{children:"Active Channels"})," entirely."]}),"\n",(0,i.jsxs)(n.p,{children:["When an Interchain Account is registered using the ",(0,i.jsx)(n.code,{children:"RegisterInterchainAccount"})," API, a new channel is created on a particular port. During the ",(0,i.jsx)(n.code,{children:"OnChanOpenAck"})," and ",(0,i.jsx)(n.code,{children:"OnChanOpenConfirm"})," steps (controller & host chain) the ",(0,i.jsx)(n.code,{children:"Active Channel"})," for this interchain account\nis stored in state."]}),"\n",(0,i.jsxs)(n.p,{children:["It is possible to create a new channel using the same controller chain portID if the previously set ",(0,i.jsx)(n.code,{children:"Active Channel"})," is now in a ",(0,i.jsx)(n.code,{children:"CLOSED"})," state. This channel creation can be initialized programmatically by sending a new ",(0,i.jsx)(n.code,{children:"MsgChannelOpenInit"})," message like so:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:"msg := channeltypes.NewMsgChannelOpenInit(portID, string(versionBytes), channeltypes.ORDERED, []string{connectionID}, icatypes.PortID, icatypes.ModuleName)\nhandler := k.msgRouter.Handler(msg)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Alternatively, any relayer operator may initiate a new channel handshake for this interchain account once the previously set ",(0,i.jsx)(n.code,{children:"Active Channel"})," is in a ",(0,i.jsx)(n.code,{children:"CLOSED"})," state. This is done by initiating the channel handshake on the controller chain using the same portID associated with the interchain account in question."]}),"\n",(0,i.jsxs)(n.p,{children:["It is important to note that once a channel has been opened for a given Interchain Account, new channels can not be opened for this account until the currently set ",(0,i.jsx)(n.code,{children:"Active Channel"})," is set to ",(0,i.jsx)(n.code,{children:"CLOSED"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);