// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ibc/core/client/v1/deprecated.proto

package types

import (
	types "cosmossdk.io/x/upgrade/types"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types1 "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// UpgradeProposal is a gov Content type for initiating an IBC breaking
// upgrade.
//
// Deprecated: Please use MsgIBCSoftwareUpgrade in favour of this message type.
//
// Deprecated: Do not use.
type UpgradeProposal struct {
	Title       string     `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Plan        types.Plan `protobuf:"bytes,3,opt,name=plan,proto3" json:"plan"`
	// An UpgradedClientState must be provided to perform an IBC breaking upgrade.
	// This will make the chain commit to the correct upgraded (self) client state
	// before the upgrade occurs, so that connecting chains can verify that the
	// new upgraded client is valid by verifying a proof on the previous version
	// of the chain. This will allow IBC connections to persist smoothly across
	// planned chain upgrades
	UpgradedClientState *types1.Any `protobuf:"bytes,4,opt,name=upgraded_client_state,json=upgradedClientState,proto3" json:"upgraded_client_state,omitempty" yaml:"upgraded_client_state"`
}

func (m *UpgradeProposal) Reset()      { *m = UpgradeProposal{} }
func (*UpgradeProposal) ProtoMessage() {}
func (*UpgradeProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_95e37bacc9dd01d3, []int{0}
}
func (m *UpgradeProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpgradeProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpgradeProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpgradeProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeProposal.Merge(m, src)
}
func (m *UpgradeProposal) XXX_Size() int {
	return m.Size()
}
func (m *UpgradeProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeProposal.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeProposal proto.InternalMessageInfo

func init() {
	proto.RegisterType((*UpgradeProposal)(nil), "ibc.core.client.v1.UpgradeProposal")
}

func init() {
	proto.RegisterFile("ibc/core/client/v1/deprecated.proto", fileDescriptor_95e37bacc9dd01d3)
}

var fileDescriptor_95e37bacc9dd01d3 = []byte{
	// 394 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xb1, 0xae, 0xd3, 0x30,
	0x14, 0x86, 0xe3, 0x4b, 0x41, 0x22, 0x77, 0x40, 0x0a, 0x45, 0x0a, 0xd5, 0x55, 0x12, 0x15, 0x86,
	0x0e, 0xd4, 0x6e, 0x8a, 0x84, 0x44, 0x37, 0xda, 0x17, 0xa8, 0x5a, 0xb1, 0xb0, 0x54, 0x8e, 0x63,
	0x8c, 0x91, 0xe3, 0x13, 0x25, 0x4e, 0xa4, 0xbc, 0x01, 0x23, 0x23, 0x12, 0x4b, 0x1f, 0x82, 0x87,
	0xa8, 0x98, 0x3a, 0x32, 0x55, 0xa8, 0x5d, 0x98, 0x79, 0x02, 0xd4, 0x38, 0x41, 0x0c, 0x6c, 0xf9,
	0xff, 0xf3, 0x9f, 0xa3, 0xef, 0xc4, 0xc7, 0x7d, 0x26, 0x13, 0x46, 0x18, 0x14, 0x9c, 0x30, 0x25,
	0xb9, 0x36, 0xa4, 0x8e, 0x49, 0xca, 0xf3, 0x82, 0x33, 0x6a, 0x78, 0x8a, 0xf3, 0x02, 0x0c, 0x78,
	0x9e, 0x4c, 0x18, 0xbe, 0x86, 0xb0, 0x0d, 0xe1, 0x3a, 0x1e, 0x3d, 0x67, 0x50, 0x66, 0x50, 0x92,
	0x2a, 0x17, 0x05, 0x4d, 0x39, 0xa9, 0xe3, 0x84, 0x1b, 0x1a, 0xf7, 0xda, 0x76, 0x8e, 0x9e, 0xda,
	0xd4, 0xae, 0x55, 0xc4, 0x8a, 0xae, 0x34, 0x14, 0x20, 0xc0, 0xfa, 0xd7, 0xaf, 0xbe, 0x41, 0x00,
	0x08, 0xc5, 0x49, 0xab, 0x92, 0xea, 0x3d, 0xa1, 0xba, 0xb1, 0xa5, 0xf1, 0xd7, 0x1b, 0xf7, 0xd1,
	0x5b, 0x3b, 0x7d, 0x5d, 0x40, 0x0e, 0x25, 0x55, 0xde, 0xd0, 0xbd, 0x6f, 0xa4, 0x51, 0xdc, 0x47,
	0x11, 0x9a, 0x3c, 0xdc, 0x58, 0xe1, 0x45, 0xee, 0x6d, 0xca, 0x4b, 0x56, 0xc8, 0xdc, 0x48, 0xd0,
	0xfe, 0x4d, 0x5b, 0xfb, 0xd7, 0xf2, 0x5e, 0xb9, 0x83, 0x5c, 0x51, 0xed, 0xdf, 0x8b, 0xd0, 0xe4,
	0x76, 0x7e, 0x87, 0x3b, 0xb2, 0x1e, 0xbe, 0x5b, 0x06, 0xaf, 0x15, 0xd5, 0xcb, 0xc1, 0xe1, 0x14,
	0x3a, 0x9b, 0x36, 0xef, 0x7d, 0x74, 0x9f, 0x74, 0x99, 0x74, 0x67, 0xff, 0xc5, 0xae, 0x34, 0xd4,
	0x70, 0x7f, 0xd0, 0x0e, 0x1a, 0x62, 0x8b, 0x8f, 0x7b, 0x7c, 0xfc, 0x46, 0x37, 0xcb, 0xe8, 0xf7,
	0x29, 0xbc, 0x6b, 0x68, 0xa6, 0x16, 0xe3, 0xff, 0x36, 0x8f, 0x37, 0x8f, 0x7b, 0x7f, 0xd5, 0xda,
	0xdb, 0xab, 0xbb, 0x78, 0xf1, 0x69, 0x1f, 0x3a, 0x5f, 0xf6, 0xa1, 0xf3, 0x6b, 0x1f, 0xa2, 0xef,
	0xdf, 0xa6, 0xa3, 0x0e, 0x52, 0x40, 0xfd, 0x17, 0x70, 0x05, 0xda, 0x70, 0x6d, 0x7c, 0xb4, 0xdc,
	0x1e, 0xce, 0x01, 0x3a, 0x9e, 0x03, 0xf4, 0xf3, 0x1c, 0xa0, 0xcf, 0x97, 0xc0, 0x39, 0x5e, 0x02,
	0xe7, 0xc7, 0x25, 0x70, 0xde, 0xbd, 0x16, 0xd2, 0x7c, 0xa8, 0x12, 0xcc, 0x20, 0xeb, 0x5e, 0x80,
	0xc8, 0x84, 0x4d, 0x05, 0x90, 0x3a, 0x9e, 0x91, 0x0c, 0xd2, 0x4a, 0xf1, 0xd2, 0xde, 0xc0, 0x6c,
	0x3e, 0xed, 0xce, 0xc0, 0x34, 0x39, 0x2f, 0x93, 0x07, 0xed, 0x1e, 0x2f, 0xff, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x8b, 0x2c, 0xc1, 0xcb, 0x26, 0x02, 0x00, 0x00,
}

func (this *UpgradeProposal) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpgradeProposal)
	if !ok {
		that2, ok := that.(UpgradeProposal)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Title != that1.Title {
		return false
	}
	if this.Description != that1.Description {
		return false
	}
	if !this.Plan.Equal(&that1.Plan) {
		return false
	}
	if !this.UpgradedClientState.Equal(that1.UpgradedClientState) {
		return false
	}
	return true
}
func (m *UpgradeProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpgradeProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpgradeProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UpgradedClientState != nil {
		{
			size, err := m.UpgradedClientState.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDeprecated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	{
		size, err := m.Plan.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintDeprecated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintDeprecated(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDeprecated(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintDeprecated(dAtA []byte, offset int, v uint64) int {
	offset -= sovDeprecated(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *UpgradeProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDeprecated(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovDeprecated(uint64(l))
	}
	l = m.Plan.Size()
	n += 1 + l + sovDeprecated(uint64(l))
	if m.UpgradedClientState != nil {
		l = m.UpgradedClientState.Size()
		n += 1 + l + sovDeprecated(uint64(l))
	}
	return n
}

func sovDeprecated(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDeprecated(x uint64) (n int) {
	return sovDeprecated(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *UpgradeProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeprecated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpgradeProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpgradeProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeprecated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeprecated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDeprecated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeprecated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeprecated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDeprecated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Plan", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeprecated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeprecated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeprecated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Plan.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpgradedClientState", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeprecated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeprecated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeprecated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpgradedClientState == nil {
				m.UpgradedClientState = &types1.Any{}
			}
			if err := m.UpgradedClientState.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDeprecated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDeprecated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDeprecated(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDeprecated
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDeprecated
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDeprecated
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDeprecated
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDeprecated
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDeprecated
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDeprecated        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDeprecated          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDeprecated = fmt.Errorf("proto: unexpected end of group")
)
